{
	"info": {
		"_postman_id": "ccd9052a-81e1-4d69-aac2-d34d1dd8bde9",
		"name": "PawBook API Copy",
		"description": "API collection for PawBook social media application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9807861"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has verification message\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.include(\"Verification code sent\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "{{test_email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{test_password}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{test_name}}",
									"type": "text"
								},
								{
									"key": "bio",
									"value": "Test bio",
									"type": "text"
								},
								{
									"key": "profile_picture",
									"type": "file",
									"src": "/path/to/profile.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify PIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Account verified message\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.include(\"Account verified\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"pin\": \"{{verification_pin}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/verify-pin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"verify-pin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token and user data\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.token).to.exist;",
									"    pm.expect(response.user).to.exist;",
									"    pm.expect(response.user.email).to.equal(pm.environment.get(\"test_email\"));",
									"    ",
									"    // Save token for other requests",
									"    pm.environment.set(\"auth_token\", response.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.email).to.equal(pm.environment.get(\"test_email\"));",
									"    pm.expect(response).to.have.property('name');",
									"    pm.expect(response).to.have.property('bio');",
									"    pm.expect(response).to.have.property('post_count');",
									"    ",
									"    // Save user ID for other requests",
									"    pm.environment.set(\"user_id\", response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user profile data\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('name');",
									"    pm.expect(response).to.have.property('bio');",
									"    pm.expect(response).to.have.property('post_count');",
									"    pm.expect(response.id).to.equal(pm.environment.get(\"user_id\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Profile updated successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.name).to.equal(\"Updated Name\");",
									"    pm.expect(response.bio).to.equal(\"Updated bio\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Updated Name",
									"type": "text"
								},
								{
									"key": "bio",
									"value": "Updated bio",
									"type": "text"
								},
								{
									"key": "profile_picture",
									"type": "file",
									"src": "/path/to/updated_profile.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Logout message\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.include(\"Logged out successfully\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get All Posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has posts array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.posts).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Each post has required fields\", function () {",
									"    const response = pm.response.json();",
									"    response.posts.forEach(post => {",
									"        pm.expect(post).to.have.property('id');",
									"        pm.expect(post).to.have.property('content');",
									"        pm.expect(post).to.have.property('author_name');",
									"        pm.expect(post).to.have.property('likes_count');",
									"        pm.expect(post).to.have.property('is_liked');",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts"
							],
							"query": [
								{
									"key": "search",
									"value": "{{search_term}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has posts array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.posts).to.be.an('array');",
									"});",
									"",
									"pm.test(\"All posts belong to current user\", function () {",
									"    const response = pm.response.json();",
									"    response.posts.forEach(post => {",
									"        pm.expect(post.user_id).to.equal(pm.environment.get(\"user_id\"));",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Post created successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.content).to.equal(\"Test post content\");",
									"    pm.expect(response.user_id).to.equal(pm.environment.get(\"user_id\"));",
									"    ",
									"    // Save post ID for other requests",
									"    pm.environment.set(\"test_post_id\", response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "Test post content",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/path/to/post.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Post updated successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.content).to.equal(\"Updated post content\");",
									"    pm.expect(response.id).to.equal(pm.environment.get(\"test_post_id\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "Updated post content",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/path/to/updated.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/posts/{{test_post_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{test_post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Like Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Post liked successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.post.is_liked).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/{{test_post_id}}/like",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{test_post_id}}",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Post unliked successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.post.is_liked).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/{{test_post_id}}/like",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{test_post_id}}",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/{{test_post_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{test_post_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reset Password",
			"item": [
				{
					"name": "Request Password Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Reset message received\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.include(\"reset code has been sent\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/request-reset",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"request-reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Reset PIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Pin verified message\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.include(\"Pin verified\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"pin\": \"{{reset_pin}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/verify-reset-pin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"verify-reset-pin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Password reset successful\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.message).to.include(\"Password reset successful\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"pin\": \"{{reset_pin}}\",\n  \"newPassword\": \"newpassword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}